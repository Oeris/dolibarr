
% print $json_text; 

<%ARGS>
$thirdparty_id => undef
$datefacturation => undef
$ticket_id => undef
$ticket_subject => undef
$contact_id => undef
$paiement_type => undef
$cond_reglement_id => undef
$account_id => undef
$json_text => undef
</%ARGS>

<%INIT>

# ----------------- Fake proxy for CrosDomain problem
#use HTTP::Request;
#use LWP::UserAgent;
#use Data::Dumper;

use SOAP::Lite +trace => [ transport => \&log_message ];
use MIME::Entity;
use HTTP::Cookies;
use HTTP::Message;
use HTTP::Response;
use HTTP::Request;
use Data::Dumper;


sub log_message {

    return 1 if ( RT->Config->Get( 'LogToFile' ) ne 'debug' );

    my ($in) = @_;
    if ( $in->isa("HTTP::Response") ) {
        open(FILE,">/tmp/RT-Response-oeris_invoice.log");
        print FILE $in->content;
        close (FILE);
    }elsif ( $in->isa("HTTP::Request") ) {
        open(FILE,">/tmp/RT-Request-oeris_invoice.log");
        print FILE $in->content;
        close (FILE);
    }
}


$ENV{'PERL_LWP_SSL_VERIFY_HOSTNAME'} = 0;



if (!defined $thirdparty_id || !defined $datefacturation || !defined $ticket_id || !defined $contact_id || !defined $paiement_type || !defined $cond_reglement_id || !defined $account_id) {
  $RT::Logger->error ( "Error when calling webservice '".RT->Config->Get( 'DolibarrURL' )."/dolinrt/oeris_invoice.php#createInvoice' : arguments 'paiement_type', 'thirdparty_id', 'datefacturation', 'contact_id' and 'ticket_id' are mandatory" ); 
} else {
  
  
  my $soap = SOAP::Lite->proxy(RT->Config->Get( 'DolibarrURL' ).'/dolinrt/oeris_invoice.php', timeout => 10);
  $soap->serializer->namespaces->{"ns"} = "xmlns:ns";
  $soap->autotype( 0 );
  $soap->soapversion( '1.1' );
  $soap->ns( 'http://www.dolibarr.org/ns/', 'ns' );
  $soap->envprefix( 'soapenv' );
  
  my $header = SOAP::Header->type( 'xml' => '' );
  
  
  my $auth = SOAP::Data->type("ns:authentication")->name('authentication' => \SOAP::Data->value(
                                                                     SOAP::Data->name('dolibarrkey')->value(RT->Config->Get( 'DolibarrKey' )),
                                                                     SOAP::Data->name('sourceapplication')->value('Request Tracker'),
                                                                     SOAP::Data->name('login')->value(RT->Config->Get( 'DolibarrLogin' )),
                                                                     SOAP::Data->name('password')->value(RT->Config->Get( 'DolibarrPassword' )),
                                                                     SOAP::Data->name('entity')->value('')
                                                                    )
                                                      );
                                                      
  my $invoice = SOAP::Data->type("ns:invoice")->name('invoice' => \SOAP::Data->value(
                                                                    SOAP::Data->type("xsd:int")->name('thirdparty_id')->value($thirdparty_id),
                                                                    SOAP::Data->type("xsd:date")->name('date')->value($datefacturation),
                                                                    SOAP::Data->type("xsd:int")->name('type')->value(0),
                                                                    SOAP::Data->type("xsd:int")->name('status')->value(1),
                                                                    SOAP::Data->type("xsd:int")->name('contact_id')->value($contact_id),
                                                                    SOAP::Data->type("xsd:string")->name('contact_source')->value("external"),
                                                                    SOAP::Data->type("xsd:string")->name('payment_mode_id')->value($paiement_type),
                                                                    SOAP::Data->type("xsd:string")->name('cond_reglement_id')->value($cond_reglement_id),
                                                                    SOAP::Data->type("xsd:string")->name('account_id')->value($account_id),
                                                                                                                                        
                                                                    )
                                                    );                                                      
  
  my $som = $soap->call('createInvoice',
                    $header,
                    $auth,
                    $invoice
  );
  
  #---- Erreur dans le retour du WS
  if ( $som->fault ) {
    $RT::Logger->error ( "Error when calling webservice '".RT->Config->Get( 'DolibarrURL' )."/dolinrt/oeris_invoice.php#createInvoice' :" . $som->fault->{faultstring} );
    $json_text = '{"error":"Error when calling webservice '.RT->Config->Get( 'DolibarrURL' ).'/dolinrt/oeris_invoice.php#createInvoice :' . $som->fault->{faultstring} .'"}'; 
  } else {
    $RT::Logger->debug ( "Webservice result '".RT->Config->Get( 'DolibarrURL' )."/dolinrt/oeris_invoice.php#createInvoice' :" . Dumper($som->result) );
    if ($som->result->{'result_code'} eq 'OK'){
      $RT::Logger->debug ( "Webservice result '".RT->Config->Get( 'DolibarrURL' )."/dolinrt/oeris_invoice.php#createInvoice' :" . Dumper($som->paramsout) );

      $RT::Logger->debug ( "Webservice result '".RT->Config->Get( 'DolibarrURL' )."/dolinrt/oeris_searchcontact.php#getContact' :" . Dumper($som->paramsout) );
      my $ref_facture=undef;                                                                                                           
      $json_text = '{"id":"'.$som->paramsout->{"id"}.'","ref":"'.$som->paramsout->{"ref"}.'"}';
      $ref_facture = $som->paramsout->{"ref"};
      
      #---- renseignement du CF Facture
      if(defined($ref_facture)) {
        my $TicketObj = RT::Ticket->new($RT::SystemUser);
        $TicketObj->Load($ticket_id);
  
        my ( $val, $msg ) = $TicketObj->AddCustomFieldValue(
            Field => RT->Config->Get('CFRefFacture'),
            Value => $ref_facture
        );
      }    
      
      #$html_text .= '<br><a href="'.RT->Config->Get( 'DolibarrURL' ).'/commande/card.php?id='.$cmdid.'">Consulter la fiche commande '.$term.'</a>';
    } elsif ($som->result->{'result_code'} eq 'INFO') {
      $RT::Logger->info ( RT->Config->Get( 'DolibarrURL' )."/dolinrt/oeris_invoice.php#createInvoice' says :" . $som->result->{'result_label'} );
      $json_text = '{"error":"Error when calling webservice '.RT->Config->Get( 'DolibarrURL' ).'/dolinrt/oeris_invoice.php#createInvoice :' . $som->result->{'result_label'} .'"}'   
    }else {
      $RT::Logger->error ( "Error when calling webservice '".RT->Config->Get( 'DolibarrURL' )."/dolinrt/oeris_invoice.php#createInvoice' :" . $som->result->{'result_label'} ); 
      $json_text = '{"error":"Error when calling webservice '.RT->Config->Get( 'DolibarrURL' ).'/dolinrt/oeris_invoice.php#createInvoice :' . $som->result->{'result_label'} .'"}'    
    }
  }
}

</%INIT>
