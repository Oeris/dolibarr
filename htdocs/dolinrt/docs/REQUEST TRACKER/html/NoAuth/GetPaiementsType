% print $html_text; 

<%ARGS>
$html_text => undef
$ref_invoice => ''
</%ARGS>

<%INIT>

# ----------------- Fake proxy for CrosDomain problem
#use HTTP::Request;
#use LWP::UserAgent;
#use Data::Dumper;

use SOAP::Lite +trace => [ transport => \&log_message ];
use MIME::Entity;
use HTTP::Cookies;
use HTTP::Message;
use HTTP::Response;
use HTTP::Request;
use Data::Dumper;
use MIME::Base64 qw( decode_base64 );


sub log_message {

    return 1 if ( RT->Config->Get( 'LogToFile' ) ne 'debug' );

    my ($in) = @_;
    if ( $in->isa("HTTP::Response") ) {
        open(FILE,">/tmp/RT-Response-oeris_invoice_detail.log");
        print FILE $in->content;
        close (FILE);
    }elsif ( $in->isa("HTTP::Request") ) {
        open(FILE,">/tmp/RT-Request-oeris_invoice_detail.log");
        print FILE $in->content;
        close (FILE);
    }
}


$ENV{'PERL_LWP_SSL_VERIFY_HOSTNAME'} = 0;



  
my $soap = SOAP::Lite->proxy(RT->Config->Get( 'DolibarrURL' ).'/dolinrt/oeris_invoice.php', timeout => 10);
$soap->serializer->namespaces->{"ns"} = "xmlns:ns";
$soap->autotype( 0 );
$soap->soapversion( '1.1' );
$soap->ns( 'http://www.dolibarr.org/ns/', 'ns' );
$soap->envprefix( 'soapenv' );

my $header = SOAP::Header->type( 'xml' => '' );


my $auth = SOAP::Data->type("ns:authentication")->name('authentication' => \SOAP::Data->value(
                                                                 SOAP::Data->name('dolibarrkey')->value(RT->Config->Get( 'DolibarrKey' )),
                                                                 SOAP::Data->name('sourceapplication')->value('Request Tracker'),
                                                                 SOAP::Data->name('login')->value(RT->Config->Get( 'DolibarrLogin' )),
                                                                 SOAP::Data->name('password')->value(RT->Config->Get( 'DolibarrPassword' )),
                                                                 SOAP::Data->name('entity')->value('')
                                                                )
                                                    );   

my $som = $soap->call('selectTypePaiement',
                  $header,
                  $auth,
                  SOAP::Data->name('reffacture')->value($ref_invoice)
);

#---- Erreur dans le retour du WS
if ( $som->fault ) {
  $RT::Logger->error ( "Error when calling webservice '".RT->Config->Get( 'DolibarrURL' )."/dolinrt/oeris_invoice.php#selectTypePaiement' :" . $som->fault->{faultstring} );
} else {
  $RT::Logger->debug ( "Webservice result '".RT->Config->Get( 'DolibarrURL' )."/dolinrt/oeris_invoice.php#selectTypePaiement' :" . Dumper($som->result) );
  if ($som->result->{'result_code'} eq 'OK'){
    $RT::Logger->debug ( "Webservice result '".RT->Config->Get( 'DolibarrURL' )."/dolinrt/oeris_invoice.php#selectTypePaiement' :" . Dumper($som->paramsout) );
    $html_text .= decode_base64($som->paramsout->{'return'});
  } else {
    $RT::Logger->error ( "Error when calling webservice '".RT->Config->Get( 'DolibarrURL' )."/dolinrt/oeris_invoice.php#selectTypePaiement' :" . $som->result->{'result_label'} );
    $html_text .= $som->result->{'result_label'};   
  }
}


</%INIT>
